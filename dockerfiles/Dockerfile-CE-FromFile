FROM cbf2-core AS cbf2-pentaho
LABEL maintainer="Pedro Alves <palves@pentaho.com>, Brandon Jackson <usbrandon@gmail.com>, Paulo Pires <paorpires@gmail.com>"

ARG CURRENT_HOST_UID
ARG CURRENT_HOST_GID
ENV CURRENT_UID=$CURRENT_HOST_UID
ENV CURRENT_GID=$CURRENT_HOST_GID

# Create pentaho user and establish its environment.
# Users are 'Homeless' within a docker container build.
RUN mkdir /home/pentaho \
 && echo "alias ll='ls -la --color=auto -la'" >> /home/pentaho/.bashrc \
 && groupadd --system pentaho -r \
 && useradd --no-log-init --system --password $(perl -e'print crypt("pentaho", "aa")' ) -g pentaho -G sudo -s /bin/bash -r -d /home/pentaho pentaho \
 && chown --recursive pentaho:pentaho /home/pentaho

# Add large files first with the correct ownership to reduce layers (true size on disk)
ADD --chown=pentaho:pentaho scripts/run.sh /pentaho/
ADD --chown=pentaho:pentaho tmp/pentaho/ /pentaho/
ADD --chown=root:root pg_hba.conf /etc/postgresql/9.5/main/pg_hba.conf

#
# Prepare the database to support the Pentaho Business Analytics Server
# 
RUN /etc/init.d/postgresql start \
 && cd /pentaho/*server*/data/postgresql; \
    psql -U postgres -f create_jcr_postgresql.sql; \
    psql -U postgres -f create_quartz_postgresql.sql; \
    psql -U postgres -f create_repository_postgresql.sql \
 && /etc/init.d/postgresql stop

#
# Basic cleanup.  
# The fancy sed line checks for BA servers less than version 6 and sets their JRE to version 7
# Otherwise, OpenJDK JRE 8 is used. (Default in cbf2-crore is openjdk-8-jre-headless) 
#
RUN rm /pentaho/*server*/promptuser.sh; \
  	cd /pentaho/*server*/tomcat/logs/ ; touch catalina.out ; touch pentaho.log ; chown pentaho:pentaho catalina.out ; chown pentaho:pentaho pentaho.log \
  	cd /pentaho ; \
    sed -i -e 's/\(exec ".*"\) start/\1 run/' /pentaho/*server*/tomcat/bin/startup.sh; \
    if [ $( ls -1 /pentaho/*server*/tomcat/webapps/pentaho/WEB-INF/lib/pentaho-platform-api-*.jar | head -n 1 | sed -E -e 's/.*pentaho-platform-api-(.).+/\1/' )  -lt "6"  ]; then update-java-alternatives -s java-7-oracle && echo Java 7 enabled ; else echo Java 8 enabled; fi \
 && echo "Update server configuration and teaching it about Excel files, LibreOffice spreadsheets, txt and sql files." \
 && cd /pentaho/pentaho-server \
 && sed -i -e 's/\(exec ".*"\) start/\1 run/' tomcat/bin/startup.sh \
 && sed -i -e 's|\(      <MimeTypeDefinition mimeType="application/vnd.ms-excel">\)|      <MimeTypeDefinition mimeType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">\n        <extension>xlsx</extension>\n      </MimeTypeDefinition>\n\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \
 && sed -i -e 's|\(      <MimeTypeDefinition mimeType="application/vnd.ms-excel">\)|      <MimeTypeDefinition mimeType="application/vnd.openxmlformats-officedocument.spreadsheetml.template">\n        <extension>xltx</extension>\n      </MimeTypeDefinition>\n\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \
 && sed -i -e 's|\(      <MimeTypeDefinition mimeType="application/vnd.ms-excel">\)|      <MimeTypeDefinition mimeType="application/vnd.ms-excel.sheet.macroEnabled.12">\n        <extension>xlsm</extension>\n      </MimeTypeDefinition>\n\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \
 && sed -i -e 's|\(      <MimeTypeDefinition mimeType="application/vnd.ms-excel">\)|      <MimeTypeDefinition mimeType="application/vnd.ms-excel.template.macroEnabled.12">\n        <extension>xltm</extension>\n      </MimeTypeDefinition>\n\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \
 && sed -i -e 's|\(      <MimeTypeDefinition mimeType="application/vnd.ms-excel">\)|      <MimeTypeDefinition mimeType="application/vnd.ms-excel.addin.macroEnabled.12">\n        <extension>xlam</extension>\n      </MimeTypeDefinition>\n\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \
 && sed -i -e 's|\(      <MimeTypeDefinition mimeType="application/vnd.ms-excel">\)|      <MimeTypeDefinition mimeType="application/vnd.ms-excel.sheet.binary.macroEnabled.12">\n        <extension>xlsb</extension>\n      </MimeTypeDefinition>\n\1|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \
 && sed -i -e 's|\(        <extension>xls</extension>\)|\1\n        <extension>xlt</extension>\n        <extension>xla</extension>|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \
 && sed -i -e 's|\(        <extension>sql</extension>\)|\1\n        <extension>txt</extension>\n        <extension>csv</extension>|' pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml \
 && sed -i -e 's|\(,csv,\)|\1sql,|' pentaho-solutions/system/*.xml \
 && sed -i -e 's|\(,xlsx,\)|\1xltx,xlsm,xltm,xlam,xlsb,|' pentaho-solutions/system/*.xml


# set alias
# RUN echo "alias ll='ls -la --color=auto -la'" >> /home/pentaho/.bashrc


# Configure mondrian logs
RUN perl -ibak -p0e 's#(</log4j:configuration>)#   <category name="mondrian">      <priority value="DEBUG"/>   </category>   <category name="mondrian.sql">      <priority value="DEBUG"/>   </category><category name="mondrian.olap.fun"><priority value="INFO"/></category><category name="mondrian.rolap.NoCacheMemberReader"><priority value="INFO"/></category><category name="mondrian.i18n.LocalizingDynamicSchemaProcessor"><priority value="INFO"/></category><category name="mondrian.rolap.RolapConnection"><priority value="INFO"/></category><category name="mondrian.olap.ResultBase"><priority value="INFO"/></category><category name="mondrian.rolap.agg.AggregationManager"><priority value="INFO"/></category><category name="mondrian.rolap.SqlStatement"><priority value="INFO"/></category><category name="mondrian.olap.RoleImpl"><priority value="INFO"/></category><category name="mondrian.rolap.RolapMember"><priority value="INFO"/></category>$1#s' /pentaho/*server*/tomcat/webapps/pentaho/WEB-INF/classes/log4j.xml && \
	perl -ibak -p0e 's/(PENTAHOCONSOLE.*?value=.)(?:ERROR|INFO)/$1DEBUG/s' /pentaho/*server*/tomcat/webapps/pentaho/WEB-INF/classes/log4j.xml

RUN perl -pi -e 's#(</log4j:configuration>)#<appender name="MONDRIAN" class="org.apache.log4j.RollingFileAppender">\n <param name="File" value="../logs/mondrian.log"/>\n <param name="Append" value="false"/>\n <param name="MaxFileSize" value="500KB"/>\n <param name="MaxBackupIndex" value="1"/>\n <layout class="org.apache.log4j.PatternLayout">\n  <param name="ConversionPattern" value="%d %-5p [%c] %m%n"/>\n </layout>\n</appender>\n<category name="mondrian">\n <priority value="DEBUG"/>\n <appender-ref ref="MONDRIAN"/>\n</category>\n$1#s' /pentaho/*server*/tomcat/webapps/pentaho/WEB-INF/classes/log4j.xml && \
	perl -pi -e 's#(</log4j:configuration>)#\n<appender name="MDXLOG" class="org.apache.log4j.RollingFileAppender">\n <param name="File" value="../logs/mondrian_mdx.log"/>\n <param name="Append" value="false"/>\n <param name="MaxFileSize" value="500KB"/>\n <param name="MaxBackupIndex" value="1"/>\n <layout class="org.apache.log4j.PatternLayout">\n  <param name="ConversionPattern" value="%d %-5p [%c] %m%n"/>\n </layout>\n</appender>\n<category name="mondrian.mdx">\n <priority value="DEBUG"/>\n <appender-ref ref="MDXLOG"/>\n</category>\n$1#s' /pentaho/*server*/tomcat/webapps/pentaho/WEB-INF/classes/log4j.xml && \
	perl -pi -e 's#(</log4j:configuration>)#\n<appender name="SQLLOG" class="org.apache.log4j.RollingFileAppender">\n <param name="File" value="../logs/mondrian_sql.log"/>\n <param name="Append" value="false"/>\n <param name="MaxFileSize" value="500KB"/>\n <param name="MaxBackupIndex" value="1"/>\n <layout class="org.apache.log4j.PatternLayout">\n  <param name="ConversionPattern" value="%d %-5p [%c] %m%n"/>\n </layout>\n</appender>\n<category name="mondrian.sql">\n <priority value="DEBUG"/>\n <appender-ref ref="SQLLOG"/>\n</category>\n$1#s' /pentaho/*server*/tomcat/webapps/pentaho/WEB-INF/classes/log4j.xml
 

#Set CTools Plugin properties
 RUN perl -ibak -p0e 's/<!--|-->//g' /pentaho/pentaho-server/pentaho-solutions/system/pentaho-cdf-dd/plugin.xml && \
	sed -i.bak 's/<!--//g;s/-->//g' /pentaho/pentaho-server/pentaho-solutions/system/cda/plugin.xml


# Allow fonts to be imported
RUN	perl -ibak -p0e 's#(<MimeTypeDefinitions>)#$1<MimeTypeDefinition mimeType="application/x-font-woff" hidden="true"><extension>woff</extension></MimeTypeDefinition><MimeTypeDefinition mimeType="application/vnd.ms-fontobject" hidden="false"><extension>eot</extension></MimeTypeDefinition><MimeTypeDefinition mimeType="application/x-font-otf" hidden="false"><extension>otf</extension></MimeTypeDefinition><MimeTypeDefinition mimeType="application/x-font-ttf" hidden="false"><extension>ttf</extension></MimeTypeDefinition>#s' /pentaho/pentaho-server/pentaho-solutions/system/ImportHandlerMimeTypeDefinitions.xml && \
		perl -ibak -p0e 's/("org.pentaho.platform.plugin.services.importer.LocaleImportHandler".*?<value>xcdf<\/value>)/$1<value>eot<\/value><value>ttf<\/value><value>woff<\/value><value>otf<\/value>/s' /pentaho/pentaho-server/pentaho-solutions/system/importExport.xml && \
		perl -ibak -p0e 's/("org.pentaho.platform.plugin.services.importexport.DefaultExportHandler".*?<value>.xcdf<\/value>)/$1<value>.eot<\/value><value>.ttf<\/value><value>.woff<\/value><value>.otf<\/value>/s' /pentaho/pentaho-server/pentaho-solutions/system/importExport.xml && \
		perl -ibak -p0e 's/("convertersMap".*?"streamConverter"\/>)/$1<entry key="eot" value-ref="streamConverter"\/><entry key="ttf" value-ref="streamConverter"\/><entry key="woff" value-ref="streamConverter"\/><entry key="otf" value-ref="streamConverter"\/>/s' /pentaho/pentaho-server/pentaho-solutions/system/importExport.xml


# Enable Pentaho Marketplace
RUN perl -ibak -p0e 's/pentaho-big-data-ee-plugin-osgi-obf/pentaho-big-data-ee-plugin-osgi-obf,pentaho-marketplace/' /pentaho/pentaho-server/pentaho-solutions/system/karaf/etc/org.apache.karaf.features.cfg


WORKDIR /pentaho
USER pentaho

EXPOSE 8080 8044 9001 5432

# 1. Run 
ENTRYPOINT ["bash", "/pentaho/run.sh"]

